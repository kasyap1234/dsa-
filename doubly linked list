class Node: 
	def __init__(self,data):
		self.data=data
		self.next=None 
		self.prev=None 
class Doublelinkedlist:
	def __init__(self):
		self.head=None 

	def insert_at_start(self,newnode):
		newnode=Node()
		self.head=newnode
		newnode.prev=None 
       if self.head is not None : 
       	self.head.prev=newnode
       	self.head=newnode
       	
       	#which means that you want to insert a node in the presence of the initial first node
	
	def insert_after(self,prevnode,newnode):
		# need to insert a node a node after a given node following the template of doubly linked list
		if prevnode==None : 
			return "prevnode does not exist in the doubly linkedlist"
		newnode=Node(data)
		newnode.next=prevnode.next
	    if newnode.next !=None : 
			prevnode.next.prev=newnode
		prevnode.next=newnode
		newnode.prev=prevnode
   	def insert_at_end(self,newnode):
    	newnode.next=None 
    	if self.head is None: 
    		self.head=newnode
    		newnode.prev=None 
        else: 
        	temp=self.head 
        	while temp.next: 
        		temp=temp.next 
        	temp.next=newnode
        	newnode.prev=temp

	
